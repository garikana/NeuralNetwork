This doc details the sequence of steps to initialise a simple Neural Network & start the learning algorithm in 
Network.py. The code implements a simple NN to solve classification problems. As my aim was to understand first-hand the various
nuances involved in implementing a simple NN, the code is not optimized and no where near production quality.
I will attempt to optimize it when I have time. I have drawn heavily from Michael A. Nielsen's excellent ebook "Neural Networks and Deep Learning". 


Prerequisites:-
Python2.7
Numpy for Python2.7
MNIST digits training data 
1) train-images-idx3-ubyte.gz
2) train-labels-idx1-ubyte.gz

Note:- The above 2 files from MNIST contains data for 60000 24*24 pixel grayscale images.
       I have used the first 50000 data points for training & the rest for testing. For
       testing you can download the 10000 image test data set from MNIST instead.

Steps to run the learning algorithm:-

1) From the python IDLE run the below.
>>>from test import Training_data
>>>k = Training_data()
>>>full_data = k.getData()
>>>from Network import Network
>>>net = Network([784,40,10])
>>>net.loadInputs(full_data[:50000],full_data[50000:])

If you are wondering where the NN's hyper-parameters are supplied you have to refer to the file
Network.py. Yes, I have hardcoded them inside. 